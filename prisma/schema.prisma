// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id               String            @id @default(uuid())
  surname          String
  otherNames       String
  password         String?
  gender           Gender?
  role             Role              @default(User)
  email            String            @unique
  address          String?
  membership_fee   String            @default("0")
  cardUrl          String?
  nationality      String?
  cardType         cardType?
  homeAddress      String?
  officeAddress    String?
  telephone        String?
  photographUrl    String?
  guarantors       Guarantors[]
  entry_date       DateTime?         @default(now())
  createdBy        String?
  loanApplications LoanApplication[]
}

model Guarantors {
  id                String  @id @default(uuid())
  name              String
  email             String  @unique
  address           String
  cardType          String?
  cardUrl           String?
  placeOfWork       String?
  addressOfBusiness String?
  homeAddress       String?
  telephone1        String?
  telephone2        String?
  positionHeld      String?
  photographUrl     String?
  UserID            String
  guranted_for      Users   @relation(fields: [UserID], references: [id], onDelete: Cascade)
}

model LoanCategory {
  id     String @id @default(uuid())
  name   String
  amount Float? @default(0.0)
}

model LoanApplication {
  id                  String   @id @default(uuid())
  loanType            LoanType?
  loanAmount          Float    @default(0.0)
  managementFee       Float?   @default(0.0)
  applicationFee      Float?   @default(3000.0)
  equity              Float?   @default(0.0)
  disbursedDate       DateTime
  loanTenure          String
  preLoanAmount       Float?
  preLoanTenure       String?
  officeAddress       String
  salaryDate          DateTime?
  salaryAmount        Float?
  bankName            String?
  bankAccNumber       String?
  outstandingLoans    YesNo?
  remarks             String   @default("pending")
  moderatorId         String
  userId              String
  user                Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum Role {
  User
  Moderator
  Admin
}

enum Gender {
  Male
  Female
}

enum LoanType {
  SalaryLoan
  AssetFinancing
  SME
}

enum cardType {
  NIN
  VotersCard
  DriversLicense
  InternationalPassport
}

enum YesNo {
  Yes
  No
}
